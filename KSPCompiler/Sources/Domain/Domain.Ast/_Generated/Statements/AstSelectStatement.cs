// Generated by CodeGenerators/ASTCodeGenerator
using KSPCompiler.Domain.Ast.Blocks;
using KSPCompiler.Domain.Ast.Expressions;

namespace KSPCompiler.Domain.Ast.Statements
{
    /// <summary>
    /// AST node representing a select statement
    /// </summary>
    public partial class AstSelectStatement : AstConditionalStatement
    {
        #region Fields
        /// <summary>
        /// public AstExpressionSyntaxNode? Condition { get; set; }
        /// </summary>
        public AstExpressionSyntaxNode? Condition { get; set; }

        /// <summary>
        /// public AstNodeList<AstCaseBlock> CaseBlocks { get; }
        /// </summary>
        public AstNodeList<AstCaseBlock> CaseBlocks { get; }

        #endregion Fields

        /// <summary>
        /// Ctor.
        /// </summary>
        public AstSelectStatement( IAstNode parent )
            : base( AstNodeId.SelectStatement, parent )
        {
            CaseBlocks = new AstNodeList<AstCaseBlock>( this );
        }


        #region IAstNodeAcceptor

        ///
        /// <inheritdoc/>
        ///
        public override void AcceptChildren<T>( IAstVisitor<T> visitor )
        {
            foreach( var n in CaseBlocks )
            {
                n.Accept( visitor );
            }
        }

        #endregion IAstNodeAcceptor
    }
}
